name: CI/CD - WEB-Jouskaio.me

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout du repo
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      # Cache node_modules pour gagner du temps
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Installer OpenVPN
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      # Cr√©er le fichier de config VPN
      - name: Create VPN Config File
        run: echo "${{ secrets.VPN_CONFIG }}" > vpn_config.ovpn

      # Se connecter au VPN
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: vpn_config.ovpn

      # D√©terminer l'environnement (prod/staging)
      - name: Set ENVIRONMENT variable
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          fi

      # V√©rifier la connexion SSH
      - name: Test SSH Connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key
          ssh -o StrictHostKeyChecking=no -i /tmp/private_key ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} whoami

      # D√©ploiement distant
      - name: Deploy to remote server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          TARGET: "/home/debian/Documents/jouskaio.me/WEB-Jouskaio.me"
          EXCLUDE: "/dist/, /node_modules/"
          SCRIPT_AFTER: |
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            cd /home/debian/Documents/jouskaio.me/WEB-Jouskaio.me
            git fetch --all
            git reset --hard origin/main

            if ! command -v yarn > /dev/null; then
              npm install -g yarn
            fi

            if [ ! -d "node_modules" ]; then
              rm -rf node_modules package-lock.json yarn.lock && yarn install
            fi

            yarn build

            pm2 start ecosystem.config.js --env $ENVIRONMENT || pm2 reload ecosystem.config.js --env $ENVIRONMENT

      - name: Discord Notification on Success
        if: success()
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: ":white_check_mark: D√©ploiement de **Jouskaio.me** termin√© avec succ√®s sur la branche **main** !"

      # Notification Discord si √©chec
      - name: Discord Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\"content\": \"üö® Le d√©ploiement de **Jouskaio.me** a √©chou√© sur \`${{ github.ref_name }}\` ! [Voir les logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
